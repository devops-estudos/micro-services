name: Contacts (CI/CD)

on:
  pull_request:
    branches:
      - main
    # paths:
    #   - "apps/contacts/**"
  push:
    branches:
      - main
    # paths:
    #   - "apps/contacts/**"

env:
  NODE_VERSION: '22'
  SERVICE: 'contacts'

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Install PNPM
        uses: pnpm/action-setup@v4

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm run lint --filter=${{ env.SERVICE }}

  check-types:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Install PNPM
        uses: pnpm/action-setup@v4
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Check types
        run: pnpm run check-types --filter=${{ env.SERVICE }}

  # tests:
  #   runs-on: ubuntu-22.04
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v5
  #     - name: Install PNPM
  #       uses: pnpm/action-setup@v4
  #     - name: Use Node.js ${{ env.NODE_VERSION }}
  #       uses: actions/setup-node@v5
  #       with:
  #         node-version: ${{ env.NODE_VERSION }}
  #         cache: "pnpm"

  #     - name: Install dependencies
  #       run: pnpm install --frozen-lockfile

  #     - name: Test
  #       run: pnpm run test:coverage --filter=${{ env.SERVICE }}

  build:
    runs-on: ubuntu-22.04
    needs: [lint, check-types]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Install pnpm
        uses: pnpm/action-setup@v4
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm run build --filter=${{ env.SERVICE }}


      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.SERVICE }}
          path: apps/${{ env.SERVICE }}/build
          retention-days: 1

  publish:
    runs-on: ubuntu-22.04
    needs: [build]
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Setup AWS
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: ${{ secrets.OIDC_ARN_ROLE }}
          role-session-name: github-actions-${{ github.actor_id }}
          aws-region: us-east-1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.CONTACTS_ECR_REPOSITORY_URL }}
          tags: |
            type=sha,format=short

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.SERVICE }}
          path: apps/${{ env.SERVICE }}/build

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: apps/${{ env.SERVICE }}/Dockerfile

          cache-from: type=gha
          cache-to: type=gha,mode=max

          build-args: |
            SERVICE=${{ env.SERVICE }}

          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

          push: false


      

      